name: Snowflake DataShare Provisioning and Grants Scheduling

on:
  pull_request:
    branches:
      - 'feature/maindatashare_*'
  push:
    branches:
    - main_datashare
  # schedule:
  #    - cron: "*/5 * * * *"
env:
  TOOLKIT_AUTH_TOKEN: ${{ secrets.TOOLKIT_AUTH_TOKEN }}
  TOOLKIT_CLI_DOWNLOAD_URL: ${{ secrets.TOOLKIT_CLI_DOWNLOAD_URL }}
  TOOLKIT_CLI_VERSION: "0.56.0"
  SNOWFLAKE_PRIVATE_KEY_PEM: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_PEM }}
  SNOWFLAKE_PRIVATE_KEY_FILE: ${{ vars.SNOWFLAKE_PRIVATE_KEY_FILE }}
  SNOWFLAKE_PRIVATE_KEY_PASSPHRASE: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_PASSPHRASE }}

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./DataShareStack    

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Download the toolkit
      shell: bash
      
      run: |
        chmod +x bin/install-toolkit-cli
        bin/install-toolkit-cli
        echo "BRANCH_NAME1=$(echo ${{ github.event.pull_request.head.ref }})" 
        echo "BRANCH_NAME2=$(echo ${{ github.head_ref }})" 
        echo "BRANCH_NAME3=$(echo ${{ github.ref_name }})" 
        echo "BRANCH_NAME4=$(echo ${{ github.ref }})" 
        echo "BRANCH_NAME5=$(echo ${{ github.base_ref }})" 
        echo "BRANCH_NAME6=$(echo ${{ github.event.pull_request.head.label}})" 
        echo "BRANCH_NAME7=$(echo ${{github.event.pull_request.base.ref}}"
    - name: Set up Java 
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: corretto

    - name: Write Snowflake private key
      shell: bash
      run: |
        echo "$SNOWFLAKE_PRIVATE_KEY_PEM" > /tmp/snowboarder_it.p8
        echo "SNOWFLAKE_PRIVATE_KEY_FILE=/tmp/snowboarder_it.p8" >> $GITHUB_ENV
      
    - name: Plan on pull request
      if: github.event_name == 'pull_request'
      shell: bash
      run: install/toolkit provision apply --plan --ignore-cache | tee plan.log
      
    - name: Apply changes on merge to master
      if: github.event_name == 'push' || github.event_name == 'schedule'    
      shell: bash
      run: |
        echo "BRANCH_NAME=$(echo ${{ github.event.pull_request.head.ref }})" >> $GITHUB_ENV
        echo "The branch name is: ${{ env.BRANCH_NAME }}"
        install/toolkit provision apply --approve --ignore-cache | tee plan.log      


  #  - name: Create comment
  #    uses: peter-evans/create-or-update-comment@v2
  #    if: github.event_name == 'pull_request'
  #    with:
  #      issue-number: ${{ github.event.pull_request.number }}
  #      body-file: 'plan.log'
  #
